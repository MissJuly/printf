# _printf(3) "23 Nov 2022" "version 1.0" "_printf(3) man page"

**NAME**
_printf


**LIBRARY**
main.h


**SYNPOSIS**
#include "main.h"

int _printf(const char *restrict format, ...);

**DESCRIPTION**
Our custom _printf function that takes variable arguments and prints out at the standard output, based on a specified formatter.

**RETURN VALUE**
Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings).

**Conversion Specifier**  
*d, i
The int argument is converted to decimal notation.

*c
The int argument is converted to an unsigned char and the result is printed.

*s
The expected char * argument is expected to be a pointer to an array of characters, aka a pointer to a string. Characters from the array are printed up to, but not including the null terminating byte ('\0').

*S
The passed character string is printed normally, unless a non-printable character is encountered. The nonprintable character is printed as '\x' followed by it's two digit hexadecimal ASCII value

*x
The given integer is converted into it's hexadecimal version, using lower case a, b, c, d, e, and f.

*X
The given integer is converted to it's hexadecimal version, using uper case A, B, C, D, E, and F

* r
The inputted string is reversed and printed out.

*R
The given string is encoded using rot13.

*u
The unsigned integer is printed out.

*o
The given integer is converted into octal notation and printed out.

**SEE ALSO**
Nothing else

**BUGS**
No known bugs.

**AUTHORS**
Barissa Imran & Joy Gitau
